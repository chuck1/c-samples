glutpp::master::master()
void neb::physics::Init()
neb::app::app()
void neb::app::init()
gal::network::server::server(short unsigned int, int)
void glutpp::scene::raw::reset()
void glutpp::scene::desc::load(const char*)
void gal::network::server::thread_accept()
void glutpp::scene::desc::load(tinyxml2::XMLElement*)
void glutpp::scene::raw::load(tinyxml2::XMLElement*)
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
0.000000 -5.000000 0.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
10.000000 0.000000 0.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
-5.000000 0.000000 10.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
5.000000 0.000000 10.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
10.000000 0.000000 5.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
10.000000 0.000000 -5.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
image = ''
void glutpp::actor::desc::load(tinyxml2::XMLElement*)
void glutpp::actor::raw::load(tinyxml2::XMLElement*)
0.000000 0.000000 0.000000
0.000000 0.000000 0.000000 1.000000
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
void glutpp::shape::desc::load(tinyxml2::XMLElement*)
void glutpp::shape::raw::load(tinyxml2::XMLElement*)
no element
image = ''
pos_                   =  0.0  0.0  0.0  1.0
ambient_               =  0.0  0.0  0.0  1.0
diffuse_               =  0.0  0.0  0.0  1.0
specular_              =  0.0  0.0  0.0  1.0
spot_direction_        =  0.0  0.0 -1.0
spot_cutoff_           =  10.0
spot_exponent_         =  1.0
spot_light_cos_cutoff_ =  0.0
atten_const_           =  1.0
atten_linear_          =  1.0
atten_quad_            =  0.0
void neb::app::load_scene_local(glutpp::scene::desc_shared)
glutpp::scene::scene::scene()
neb::scene::scene::scene(neb::app_shared)
void neb::scene::scene::init(glutpp::scene::desc_shared)
void neb::scene::scene::create_physics()
cpu dispatcher
filter shader
gpu dispatcher
void neb::scene::scene::create_actors(glutpp::scene::desc_shared)
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Static::Rigid_Static(neb::scene::scene_shared, neb::actor::Base_shared)
virtual void neb::actor::Rigid_Static::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Static::create_physics()
./../../PhysX/src/NpScene.cpp:354: PxScene::addActor(): Static actor with no shapes added to scene
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Static::init_physics()
virtual neb::actor::Base::~Base()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::empty::empty(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
virtual void neb::actor::empty::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::empty::create_physics()
not implemented
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
glutpp::light::light::light(glutpp::shape::shape_shared)
void glutpp::light::light::init(glutpp::scene::scene_shared, glutpp::light::desc_shared)
void glutpp::light::light::i(int)
void neb::shape::create_physics()
virtual void neb::actor::empty::init_physics()
not implemented
virtual neb::actor::Base::~Base()
void glutpp::scene::scene::i(int)
glutpp::window::window_shared neb::app::create_window(int, int, int, int, const char*)
glutpp::window::window::window(glutpp::window::desc_shared)
/home/charles/usr
int glutpp::master::reg(glutpp::window::window_shared)
int glutpp::master::create_programs()
void glutpp::glsl::program::init()
program = 1
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/text/vs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/text/vs.glsl' loaded
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/text/fs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/text/fs.glsl' loaded
void glutpp::glsl::program::compile()
program=1
attrib coord
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::program::init()
program = 4
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/light/vs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/light/vs.glsl' loaded
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/light/fs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/light/fs.glsl' loaded
void glutpp::glsl::program::compile()
program=4
attrib position
attrib normal
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::program::init()
program = 7
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/image/vs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/image/vs.glsl' loaded
void glutpp::glsl::shader::load(const char*, GLenum)
loading /home/charles/usr/include/glutpp/glsl/shaders/v130/image/fs.glsl
shader file '/home/charles/usr/include/glutpp/glsl/shaders/v130/image/fs.glsl' loaded
void glutpp::glsl::program::compile()
program=7
attrib position
attrib normal
attrib texcoor
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::glsl::uniform::locate(std::shared_ptr<glutpp::glsl::program>)
void glutpp::window::window::init()
glutpp::renderable::renderable(glutpp::window::window_shared)
void glutpp::renderable::init(glutpp::window::window_shared)
void glutpp::camera::init(std::shared_ptr<glutpp::renderable>)
window use count = 1
window use count = 2
window use count = 2
int neb::app::activate_scene(int, int)
int glutpp::window::window::set_scene(std::shared_ptr<glutpp::scene::scene>)
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Dynamic::Rigid_Dynamic(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
virtual void neb::actor::Rigid_Dynamic::init(glutpp::actor::desc_shared)
virtual void neb::actor::Base::init(glutpp::actor::desc_shared)
virtual void neb::actor::Rigid_Dynamic::create_physics()
void neb::actor::Base::create_children(glutpp::actor::desc_shared)
void neb::actor::Base::create_shapes(glutpp::actor::desc_shared)
glutpp::mesh::mesh()
glutpp::shape::raw::raw()
glutpp::shape::shape::shape(glutpp::actor::actor_shared)
neb::shape::shape(glutpp::actor::actor_shared)
virtual void neb::shape::init(glutpp::shape::desc_shared)
void glutpp::shape::shape::init(glutpp::shape::desc_shared)
void glutpp::mesh::load(const char*)
load file '/home/charles/usr/include/glutpp/objects/cube.obj'
void neb::shape::create_physics()
physx::PxGeometry* neb::shape::to_geo()
virtual void neb::actor::Rigid_Dynamic::init_physics()
int neb::user::set_actor(std::shared_ptr<neb::actor::Base>, neb::camera_type::e)
actor ref count = 2
void neb::user::connect(glutpp::window::window_shared)
window use count = 2
void glutpp::window::window::callback_key_fun(GLFWwindow*, int, int, int, int)
virtual int neb::actor::Rigid_Body::key_fun(int, int, int, int)
virtual int neb::actor::Base::fire()
virtual glutpp::actor::desc_shared neb::actor::Rigid_Body::get_projectile()
glutpp::shape::raw::raw()
glutpp::shape::desc::desc()
neb::actor::Base_shared neb::scene::scene::create_actor(glutpp::actor::desc_shared)
glutpp::actor::actor::actor(std::shared_ptr<glutpp::scene::scene>, std::shared_ptr<glutpp::actor::actor>)
neb::actor::Base::Base(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::Base>)
neb::actor::Rigid_Dynamic::Rigid_Dynamic(std::shared_ptr<neb::scene::scene>, std::shared_ptr<neb::actor::